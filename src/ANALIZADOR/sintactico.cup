package ANALIZADOR;

import java_cup.runtime.Symbol;
import java.util.LinkedList;
import Reestructurado_expresiones.Expresion_Lexema;
parser code
{:
    private Symbol s;
    public String conca="";
    public String concat="";
    public LinkedList<Expresion_Lexema> Lexemas = new LinkedList<>();
    public LinkedList<Expresion_Lexema> Macros = new LinkedList<>();
    public LinkedList<Expresion_Lexema> ExpresionesRegulares = new LinkedList<>();

    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};

terminal calcular,ptcoma,parizq,parder,dol,corcheteabierto,corchetecerrado,llaveabierta,llavecerrada,
definirglobales,generarreporteestadistico,compare,graficabarras,titulo,ejex,valores,titulox,tituloy,graficapie,graficalienas,
entero,decimal,id,cadenastring,CARACTER;

non terminal String INICIO ,GR,DG,GB,GP,GL;

start with INICIO;

INICIO ::= 
        Llave_a  B Llave_c {: :} 
        |ERROR {: :} ;
